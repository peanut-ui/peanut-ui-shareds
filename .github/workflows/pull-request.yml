name: Pull request workflow

on:
  pull_request:
    branches:
      - next-minor

jobs:
  build:
    name: Build, test, lint, eval and release development packages
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - name: Get yarn cache path
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Setup node js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Load yarn cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install packages
        run: yarn peanut:bootstrap
        env:
          CI: true

      - name: Setup npm
        run: |
          cat << EOF > "$HOME/.npmrc"
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build packages
        run: yarn build

      - name: Lint packages
        run: yarn lint

      - name: Test packages
        run: yarn test:ci

      - name: Release packages to npm (development)
        run: |
          yarn changeset version --snapshot dev
          yarn changeset publish --tag dev
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Eval bundle packages
        uses: jackyef/bundlewatch-gh-action@0.2.0
        with:
          build-script: yarn build
          bundlewatch-github-token: ${{ secrets.BUNDLEWATCH_TOKEN }}
          bundlewatch-config: ./bundlewatch.json
